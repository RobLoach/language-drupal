'.text.drupal':
  'hook_field_storage_write':
    'prefix': 'hook_field_storage_write'
    'body': '/**\n * Implements hook_field_storage_write().\n */\nfunction $1_field_storage_write(\$entity_type, \$entity, \$op, \$fields) {\n  list(\$id, \$vid, \$bundle) = entity_extract_ids(\$entity_type, \$entity);\n  \$etid = _field_sql_storage_etid(\$entity_type);\n\n  foreach (\$fields as \$field_id) {\n    /*\n     *  \$field = field_info_field_by_id(\$field_id);\n     *  \$field_name = \$field[\'field_name\'];\n     *  \$table_name = _field_sql_storage_tablename(\$field);\n     *  \$revision_name = _field_sql_storage_revision_tablename(\$field);\n     *\n     *  \$all_languages = field_available_languages(\$entity_type, \$field);\n     *  \$field_languages = array_intersect(\$all_languages, array_keys((array) \$entity->\$field_name));\n     *\n     *  // Delete and insert, rather than update, in case a value was added.\n     *  if (\$op == FIELD_STORAGE_UPDATE) {\n     *    // Delete languages present in the incoming \$entity->\$field_name.\n     *    // Delete all languages if \$entity->\$field_name is empty.\n     *    \$languages = !empty(\$entity->\$field_name) ? \$field_languages : \$all_languages;\n     *    if (\$languages) {\n     *      db_delete(\$table_name)\n     *        ->condition(\'etid\', \$etid)\n     *        ->condition(\'entity_id\', \$id)\n     *        ->condition(\'language\', \$languages, \'IN\')\n     *        ->execute();\n     *      if (isset(\$vid)) {\n     *        db_delete(\$revision_name)\n     *          ->condition(\'etid\', \$etid)\n     *          ->condition(\'entity_id\', \$id)\n     *          ->condition(\'revision_id\', \$vid)\n     *          ->condition(\'language\', \$languages, \'IN\')\n     *          ->execute();\n     *      }\n     *    }\n     *  }\n     *\n     *  // Prepare the multi-insert query.\n     *  \$do_insert = FALSE;\n     *  \$columns = array(\'etid\', \'entity_id\', \'revision_id\', \'bundle\', \'delta\', \'language\');\n     *  foreach (\$field[\'columns\'] as \$column => \$attributes) {\n     *    \$columns[] = _field_sql_storage_columnname(\$field_name, \$column);\n     *  }\n     *  \$query = db_insert(\$table_name)->fields(\$columns);\n     *  if (isset(\$vid)) {\n     *    \$revision_query = db_insert(\$revision_name)->fields(\$columns);\n     *  }\n     *\n     *  foreach (\$field_languages as \$langcode) {\n     *    \$items = (array) \$entity->{\$field_name}[\$langcode];\n     *    \$delta_count = 0;\n     *    foreach (\$items as \$delta => \$item) {\n     *      // We now know we have someting to insert.\n     *      \$do_insert = TRUE;\n     *      \$record = array(\n     *        \'etid\' => \$etid,\n     *        \'entity_id\' => \$id,\n     *        \'revision_id\' => \$vid,\n     *        \'bundle\' => \$bundle,\n     *        \'delta\' => \$delta,\n     *        \'language\' => \$langcode,\n     *      );\n     *      foreach (\$field[\'columns\'] as \$column => \$attributes) {\n     *        \$record[_field_sql_storage_columnname(\$field_name, \$column)] = isset(\$item[\$column]) ? \$item[\$column] : NULL;\n     *      }\n     *      \$query->values(\$record);\n     *      if (isset(\$vid)) {\n     *        \$revision_query->values(\$record);\n     *      }\n     *\n     *      if (\$field[\'cardinality\'] != FIELD_CARDINALITY_UNLIMITED && ++\$delta_count == \$field[\'cardinality\']) {\n     *        break;\n     *      }\n     *    }\n     *  }\n     *\n     *  // Execute the query if we have values to insert.\n     *  if (\$do_insert) {\n     *    \$query->execute();\n     *    if (isset(\$vid)) {\n     *      \$revision_query->execute();\n     *    }\n     *  }\n     */\n    ${1:/* Your code here */}\n  }\n}'