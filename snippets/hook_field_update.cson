'.text.drupal':
  'hook_field_update':
    'prefix': 'hook_field_update'
    'body': '/**\n * Implements hook_field_update().\n */\nfunction $1_field_update(\$entity_type, \$entity, \$field, \$instance, \$langcode, &\$items) {\n  /*\n   *if (variable_get(\'taxonomy_maintain_index_table\', TRUE) && \$field[\'storage\'][\'type\'] == \'field_sql_storage\' && \$entity_type == \'node\') {\n   *  \$first_call = &drupal_static(__FUNCTION__, array());\n   *\n   *  // We don\'t maintain data for old revisions, so clear all previous values\n   *  // from the table. Since this hook runs once per field, per object, make\n   *  // sure we only wipe values once.\n   *  if (!isset(\$first_call[\$entity->nid])) {\n   *    \$first_call[\$entity->nid] = FALSE;\n   *    db_delete(\'taxonomy_index\')->condition(\'nid\', \$entity->nid)->execute();\n   *  }\n   *  // Only save data to the table if the node is published.\n   *  if (\$entity->status) {\n   *    \$query = db_insert(\'taxonomy_index\')->fields(array(\'nid\', \'tid\', \'sticky\', \'created\'));\n   *    foreach (\$items as \$item) {\n   *      \$query->values(array(\n   *        \'nid\' => \$entity->nid,\n   *        \'tid\' => \$item[\'tid\'],\n   *        \'sticky\' => \$entity->sticky,\n   *        \'created\' => \$entity->created,\n   *      ));\n   *    }\n   *    \$query->execute();\n   *  }\n   *}\n   */\n  ${1:/* Your code here */}\n}'