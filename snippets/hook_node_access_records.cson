'.text.drupal':
  'hook_node_access_records':
    'prefix': 'hook_node_access_records'
    'body': '/**\n * Implements hook_node_access_records().\n */\nfunction $1_node_access_records(\$node) {\n  // We only care about the node if it has been marked private. If not, it is\n  // treated just like any other node and we completely ignore it.\n  /*\n   *  if (\$node->private) {\n   *    \$grants = array();\n   *    // Only published nodes should be viewable to all users. If we allow access\n   *    // blindly here, then all users could view an unpublished node.\n   *    if (\$node->status) {\n   *      \$grants[] = array(\n   *        \'realm\' => \'example\',\n   *        \'gid\' => 1,\n   *        \'grant_view\' => 1,\n   *        \'grant_update\' => 0,\n   *        \'grant_delete\' => 0,\n   *        \'priority\' => 0,\n   *      );\n   *    }\n   *    // For the example_author array, the GID is equivalent to a UID, which\n   *    // means there are many groups of just 1 user.\n   *    // Note that an author can always view his or her nodes, even if they\n   *    // have status unpublished.\n   *    \$grants[] = array(\n   *      \'realm\' => \'example_author\',\n   *      \'gid\' => \$node->uid,\n   *      \'grant_view\' => 1,\n   *      \'grant_update\' => 1,\n   *      \'grant_delete\' => 1,\n   *      \'priority\' => 0,\n   *    );\n   *\n   *    return \$grants;\n   *  }\n   */\n    \$grants[] = array(\n      \'realm\' => \'${1}\',\n      \'gid\' => ${2},\n      \'grant_view\' => ${3},\n      \'grant_update\' => ${4},\n      \'grant_delete\' => ${5},\n      \'priority\' => ${6},\n    );\n\n    return \$grants;\n  }\n}'