'.text.drupal':
  'hook_field_storage_pre_update':
    'prefix': 'hook_field_storage_pre_update'
    'body': '/**\n * Implements hook_field_storage_pre_update().\n */\nfunction $1_field_storage_pre_update(\$entity_type, \$entity, &\$skip_fields) {\n  /*\n   *  \$first_call = &drupal_static(__FUNCTION__, array());\n   *\n   *  if (\$entity_type == \'node\' && \$entity->status && _forum_node_check_node_type(\$entity)) {\n   *    // We don\'t maintain data for old revisions, so clear all previous values\n   *    // from the table. Since this hook runs once per field, per entity, make\n   *    // sure we only wipe values once.\n   *    if (!isset(\$first_call[\$entity->nid])) {\n   *      \$first_call[\$entity->nid] = FALSE;\n   *      db_delete(\'forum_index\')->condition(\'nid\', \$entity->nid)->execute();\n   *    }\n   *    // Only save data to the table if the node is published.\n   *    if (\$entity->status) {\n   *      \$query = db_insert(\'forum_index\')->fields(array(\'nid\', \'title\', \'tid\', \'sticky\', \'created\', \'comment_count\', \'last_comment_timestamp\'));\n   *      foreach (\$entity->taxonomy_forums as \$language) {\n   *        foreach (\$language as \$delta) {\n   *          \$query->values(array(\n   *            \'nid\' => \$entity->nid,\n   *            \'title\' => \$entity->title,\n   *            \'tid\' => \$delta[\'value\'],\n   *            \'sticky\' => \$entity->sticky,\n   *            \'created\' => \$entity->created,\n   *            \'comment_count\' => 0,\n   *            \'last_comment_timestamp\' => \$entity->created,\n   *          ));\n   *        }\n   *      }\n   *      \$query->execute();\n   *      // The logic for determining last_comment_count is fairly complex, so\n   *      // call _forum_update_forum_index() too.\n   *      _forum_update_forum_index(\$entity->nid);\n   *    }\n   *  }\n   */\n  ${1:/* Your code here */}\n}'