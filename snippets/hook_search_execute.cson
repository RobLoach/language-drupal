'.text.drupal':
  'hook_search_execute':
    'prefix': 'hook_search_execute'
    'body': '/**\n * Implements hook_search_execute().\n */\nfunction $1_search_execute(\$keys = NULL, \$conditions = NULL) {\n  /*\n   *  // Build matching conditions\n   *  \$query = db_select(\'search_index\', \'i\', array(\'target\' => \'slave\'))->extend(\'SearchQuery\')->extend(\'PagerDefault\');\n   *  \$query->join(\'node\', \'n\', \'n.nid = i.sid\');\n   *  \$query\n   *    ->condition(\'n.status\', 1)\n   *    ->addTag(\'node_access\')\n   *    ->searchExpression(\$keys, \'node\');\n   *\n   *  // Insert special keywords.\n   *  \$query->setOption(\'type\', \'n.type\');\n   *  \$query->setOption(\'language\', \'n.language\');\n   *  if (\$query->setOption(\'term\', \'ti.tid\')) {\n   *    \$query->join(\'taxonomy_index\', \'ti\', \'n.nid = ti.nid\');\n   *  }\n   *  // Only continue if the first pass query matches.\n   *  if (!\$query->executeFirstPass()) {\n   *    return array();\n   *  }\n   *\n   *  // Add the ranking expressions.\n   *  _node_rankings(\$query);\n   *\n   *  // Load results.\n   *  \$find = \$query\n   *    ->limit(10)\n   *    ->execute();\n   *  \$results = array();\n   *  foreach (\$find as \$item) {\n   *    // Build the node body.\n   *    \$node = node_load(\$item->sid);\n   *    node_build_content(\$node, \'search_result\');\n   *    \$node->body = drupal_render(\$node->content);\n   *\n   *    // Fetch comments for snippet.\n   *    \$node->rendered .= \' \' . module_invoke(\'comment\', \'node_update_index\', \$node);\n   *    // Fetch terms for snippet.\n   *    \$node->rendered .= \' \' . module_invoke(\'taxonomy\', \'node_update_index\', \$node);\n   *\n   *    \$extra = module_invoke_all(\'node_search_result\', \$node);\n   *\n   *    \$results[] = array(\n   *      \'link\' => url(\'node/\' . \$item->sid, array(\'absolute\' => TRUE)),\n   *      \'type\' => check_plain(node_type_get_name(\$node)),\n   *      \'title\' => \$node->title,\n   *      \'user\' => theme(\'username\', array(\'account\' => \$node)),\n   *      \'date\' => \$node->changed,\n   *      \'node\' => \$node,\n   *      \'extra\' => \$extra,\n   *      \'score\' => \$item->calculated_score,\n   *      \'snippet\' => search_excerpt(\$keys, \$node->body),\n   *    );\n   *  }\n   *  return \$results;\n   */\n  ${1:/* Your code here */}\n}'