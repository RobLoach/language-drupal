'.text.drupal':
  'hook_tokens($type,':
    'prefix': 'hook_tokens(\$type,'
    'body': '/**\n * Implements hook_tokens(\$type, \$tokens, array \$data = array(), array \$options = array().\n */\nfunction $1_tokens(\$type, \$tokens, array \$data = array(), array \$options = array()) {\n  \$replacements = array();\n\n  /*\n   *  \$url_options = array(\'absolute\' => TRUE);\n   *  if (isset(\$options[\'language\'])) {\n   *    \$url_options[\'language\'] = \$options[\'language\'];\n   *    \$language_code = \$options[\'language\']->language;\n   *  }\n   *  else {\n   *    \$language_code = NULL;\n   *  }\n   *  \$sanitize = !empty(\$options[\'sanitize\']);\n   *\n   *  \$replacements = array();\n   *\n   *  if (\$type == \'node\' && !empty(\$data[\'node\'])) {\n   *    \$node = \$data[\'node\'];\n   *\n   *    foreach (\$tokens as \$name => \$original) {\n   *      switch (\$name) {\n   *        // Simple key values on the node.\n   *        case \'nid\':\n   *          \$replacements[\$original] = \$node->nid;\n   *          break;\n   *\n   *        case \'title\':\n   *          \$replacements[\$original] = \$sanitize ? check_plain(\$node->title) : \$node->title;\n   *          break;\n   *\n   *        case \'edit-url\':\n   *          \$replacements[\$original] = url(\'node/\' . \$node->nid . \'/edit\', \$url_options);\n   *          break;\n   *\n   *        // Default values for the chained tokens handled below.\n   *        case \'author\':\n   *          \$name = (\$node->uid == 0) ? variable_get(\'anonymous\', t(\'Anonymous\')) : \$node->name;\n   *          \$replacements[\$original] = \$sanitize ? filter_xss(\$name) : \$name;\n   *          break;\n   *\n   *        case \'created\':\n   *          \$replacements[\$original] = format_date(\$node->created, \'medium\', \'\', NULL, \$language_code);\n   *          break;\n   *      }\n   *    }\n   *\n   *    if (\$author_tokens = token_find_with_prefix(\$tokens, \'author\')) {\n   *      \$author = user_load(\$node->uid);\n   *      \$replacements += token_generate(\'user\', \$author_tokens, array(\'user\' => \$author), \$options);\n   *    }\n   *\n   *    if (\$created_tokens = token_find_with_prefix(\$tokens, \'created\')) {\n   *      \$replacements += token_generate(\'date\', \$created_tokens, array(\'date\' => \$node->created), \$options);\n   *    }\n   *  }\n   */\n  ${1:/* Your code here */}\n\n  return \$replacements;\n}'